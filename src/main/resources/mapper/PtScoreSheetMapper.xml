<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rufeng.healthman.mapper.PtScoreSheetMapper">
    <resultMap id="BaseResultMap" type="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        <!--@Table pt_score_sheet-->
        <id column="sub_id" property="subId"/>
        <id column="gender" property="gender"/>
        <id column="grade" property="grade"/>
        <id column="upper" property="upper"/>
        <id column="lower" property="lower"/>
        <result column="score" property="score"/>
        <result column="created_time" property="createdTime"/>
        <result column="last_modify_time" property="lastModifyTime"/>
        <result column="level" property="level"/>
        <result column="id" property="id"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        sub_id, gender, grade, `upper`, `lower`, score, created_time, last_modify_time,
        `level`, id
    </sql>
    <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from pt_score_sheet
        where sub_id = #{subjectId}
        and gender = #{gender}
        and grade = #{grade}
        and `upper` = #{upper}
        and `lower` = #{lower}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
        <!--@mbg.generated-->
        delete
        from pt_score_sheet
        where sub_id = #{subjectId}
        and gender = #{gender}
        and grade = #{grade}
        and `upper` = #{upper}
        and `lower` = #{lower}
    </delete>
    <insert id="insert" parameterType="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        insert into pt_score_sheet (sub_id, gender, grade, `upper`, `lower`, score, created_time,
        last_modify_time, `level`, id)
        values (#{subId}, #{gender}, #{grade}, #{upper}, #{lower}, #{score}, #{createdTime},
        #{lastModifyTime}, #{level}, #{id})
    </insert>
    <insert id="insertSelective" parameterType="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        insert into pt_score_sheet
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subId != null">
                sub_id,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="upper != null">
                `upper`,
            </if>
            <if test="lower != null">
                `lower`,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="lastModifyTime != null">
                last_modify_time,
            </if>
            <if test="level != null">
                `level`,
            </if>
            <if test="id != null">
                id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="subId != null">
                #{subId},
            </if>
            <if test="gender != null">
                #{gender},
            </if>
            <if test="grade != null">
                #{grade},
            </if>
            <if test="upper != null">
                #{upper},
            </if>
            <if test="lower != null">
                #{lower},
            </if>
            <if test="score != null">
                #{score},
            </if>
            <if test="createdTime != null">
                #{createdTime},
            </if>
            <if test="lastModifyTime != null">
                #{lastModifyTime},
            </if>
            <if test="level != null">
                #{level},
            </if>
            <if test="id != null">
                #{id},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        update pt_score_sheet
        <set>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="lastModifyTime != null">
                last_modify_time = #{lastModifyTime},
            </if>
            <if test="level != null">
                `level` = #{level},
            </if>
            <if test="id != null">
                id = #{id},
            </if>
        </set>
        where sub_id = #{subId}
        and gender = #{gender}
        and grade = #{grade}
        and `upper` = #{upper}
        and `lower` = #{lower}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        update pt_score_sheet
        set score = #{score},
        created_time = #{createdTime},
        last_modify_time = #{lastModifyTime},
        `level` = #{level},
        id = #{id}
        where sub_id = #{subId}
        and gender = #{gender}
        and grade = #{grade}
        and `upper` = #{upper}
        and `lower` = #{lower}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update pt_score_sheet
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="score = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when sub_id = #{item.subId} then #{item.score}
                </foreach>
            </trim>
            <trim prefix="created_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when sub_id = #{item.subId} then #{item.createdTime}
                </foreach>
            </trim>
            <trim prefix="last_modify_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when sub_id = #{item.subId} then #{item.lastModifyTime}
                </foreach>
            </trim>
            <trim prefix="`level` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when sub_id = #{item.subId} then #{item.level}
                </foreach>
            </trim>
            <trim prefix="id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when sub_id = #{item.subId} then #{item.id}
                </foreach>
            </trim>
        </trim>
        where sub_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.subId}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update pt_score_sheet
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="score = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.score != null">
                        when sub_id = #{item.subId} then #{item.score}
                    </if>
                </foreach>
            </trim>
            <trim prefix="created_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createdTime != null">
                        when sub_id = #{item.subId} then #{item.createdTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="last_modify_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.lastModifyTime != null">
                        when sub_id = #{item.subId} then #{item.lastModifyTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`level` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.level != null">
                        when sub_id = #{item.subId} then #{item.level}
                    </if>
                </foreach>
            </trim>
            <trim prefix="id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.id != null">
                        when sub_id = #{item.subId} then #{item.id}
                    </if>
                </foreach>
            </trim>
        </trim>
        where sub_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.subId}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into pt_score_sheet
        (sub_id, gender, grade, `upper`, `lower`, score, created_time, last_modify_time,
        `level`, id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.subId}, #{item.gender}, #{item.grade}, #{item.upper}, #{item.lower},
            #{item.score}, #{item.createdTime}, #{item.lastModifyTime}, #{item.level}, #{item.id})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        insert into pt_score_sheet
        (sub_id, gender, grade, `upper`, `lower`, score, created_time, last_modify_time,
        `level`, id)
        values (#{subId}, #{gender}, #{grade}, #{upper}, #{lower}, #{score}, #{createdTime},
        #{lastModifyTime}, #{level}, #{id})
        on duplicate key update sub_id = #{subId},
        gender = #{gender},
        grade = #{grade},
        `upper` = #{upper},
        `lower` = #{lower},
        score = #{score},
        created_time = #{createdTime},
        last_modify_time = #{lastModifyTime},
        `level` = #{level},
        id = #{id}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="com.rufeng.healthman.pojo.ptdo.PtScoreSheet">
        <!--@mbg.generated-->
        insert into pt_score_sheet
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subId != null">
                sub_id,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="upper != null">
                `upper`,
            </if>
            <if test="lower != null">
                `lower`,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="lastModifyTime != null">
                last_modify_time,
            </if>
            <if test="level != null">
                `level`,
            </if>
            <if test="id != null">
                id,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="subId != null">
                #{subId},
            </if>
            <if test="gender != null">
                #{gender},
            </if>
            <if test="grade != null">
                #{grade},
            </if>
            <if test="upper != null">
                #{upper},
            </if>
            <if test="lower != null">
                #{lower},
            </if>
            <if test="score != null">
                #{score},
            </if>
            <if test="createdTime != null">
                #{createdTime},
            </if>
            <if test="lastModifyTime != null">
                #{lastModifyTime},
            </if>
            <if test="level != null">
                #{level},
            </if>
            <if test="id != null">
                #{id},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="subId != null">
                sub_id = #{subId},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="grade != null">
                grade = #{grade},
            </if>
            <if test="upper != null">
                `upper` = #{upper},
            </if>
            <if test="lower != null">
                `lower` = #{lower},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="lastModifyTime != null">
                last_modify_time = #{lastModifyTime},
            </if>
            <if test="level != null">
                `level` = #{level},
            </if>
            <if test="id != null">
                id = #{id},
            </if>
        </trim>
    </insert>

    <insert id="batchInsertSelective">
        INSERT INTO pt_score_sheet (sub_id, grade, gender, upper, lower, score, level)
        VALUES
        <foreach collection="items" item="item" separator=",">
            (#{item.subId}, #{item.grade}, #{item.gender}, #{item.upper}, #{item.lower}, #{item.score},
            #{item.level})
        </foreach>
    </insert>
    <select id="listScoreSheetBySubStudent" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM pt_score_sheet
        WHERE sub_id = #{subId}
        AND grade = #{grade}
        AND gender = #{gender}
    </select>

    <select id="pageScoreSheet" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM pt_score_sheet
        <where>
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="grade != null">
                AND grade = #{grade}
            </if>
            <if test="subId != null">
                AND sub_id = #{subId}
            </if>
        </where>
        ORDER BY score DESC
    </select>

    <select id="listSubIdBySubIds" resultType="long">
        SELECT DISTINCT sub_id
        FROM pt_score_sheet
        <where>
            <foreach collection="list" item="item" separator="," open="sub_id IN (" close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <delete id="deleteBySubId">
        DELETE
        FROM pt_score_sheet
        WHERE sub_id = #{subId}
    </delete>

    <update id="updateByIdSelective">
        UPDATE pt_score_sheet
        SET upper = #{upper},
            lower = #{lower},
            score = #{score},
            level = #{level}
        WHERE id = #{id}
          AND grade = #{grade}
          AND gender = #{gender}
          AND sub_id = #{subId}
    </update>

    <delete id="deleteById">
        DELETE FROM pt_score_sheet WHERE id = #{id}
    </delete>
</mapper>